{
  "name": "futures",
  "version": "0.0.1",
  "description": "",
  "author": "3Commas/DeCommas",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "start:dev-db": "docker compose up",
    "build:all": "NODE_ENV=production nest build aggregator && NODE_ENV=production nest build api && nest build shared  && cd apps/frontend && NODE_ENV=production next build",
    "build:all:stage": "NODE_ENV=stage nest build aggregator && NODE_ENV=stage nest build api && nest build shared  && cd apps/frontend && NODE_ENV=stage next build",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start:agg": "nest start aggregator",
    "start:api": "NODE_ENV=development nest start api",
    "start:prod:agg": "NODE_ENV=production node dist/apps/aggregator/main.js",
    "start:prod:api": "NODE_ENV=production node dist/apps/api/main.js",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e:api": "jest --config ./apps/api/test/jest-e2e.json",
    "test:e2e:agg": "jest --config ./apps/aggregator/test/jest-e2e.json",
    "pm2:start:all:production": "yarn pm2:start:agg:production; yarn pm2:start:api:production;",
    "pm2:start:api:production": "NODE_ENV=production pm2 stop futures_api; pm2 delete futures_api; pm2 start ecosystem.config.js --only futures_api",
    "pm2:start:agg:production": "NODE_ENV=production pm2 stop futures_agg; pm2 delete futures_agg; pm2 start ecosystem.config.js --only futures_agg",
    "pm2:start:all:staging": "yarn pm2:start:agg:staging; yarn pm2:start:api:staging;",
    "pm2:start:api:staging": "NODE_ENV=stage pm2 stop futures_api_staging; pm2 delete futures_api_staging; pm2 start ecosystem.config.js --only futures_api_staging",
    "pm2:start:agg:staging": "NODE_ENV=stage pm2 stop futures_agg_staging; pm2 delete futures_agg_staging; pm2 start ecosystem.config.js --only futures_agg_staging"
  },
  "dependencies": {
    "@apollo/client": "^3.4.16",
    "@apollo/subgraph": "^0.1.2",
    "@dydxprotocol/starkex-lib": "^1.0.5",
    "@dydxprotocol/v3-client": "^1.3.1",
    "@nestjs/axios": "^0.0.2",
    "@nestjs/common": "^7.6.15",
    "@nestjs/config": "^1.0.1",
    "@nestjs/core": "^7.6.15",
    "@nestjs/graphql": "^9.0.4",
    "@nestjs/mongoose": "^8.0.1",
    "@nestjs/platform-express": "^7.6.15",
    "@nestjs/schedule": "^1.0.1",
    "@nestjs/serve-static": "^2.2.2",
    "@perp/cli": "^0.2.6",
    "@perp/contract": "^2.2.2",
    "@types/lodash": "^4.14.175",
    "apollo-server-express": "^3.3.0",
    "bignumber.js": "^9.0.1",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "cross-fetch": "^3.1.4",
    "cryptocurrency-icons": "^0.18.0",
    "ethers": "^5.4.7",
    "graphql": "^15.5.3",
    "graphql-request": "^3.5.0",
    "lodash": "^4.17.21",
    "moment": "^2.29.1",
    "mongoose": "^6.0.7",
    "next": "^11.1.2",
    "promise": "^8.1.0",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-router-dom": "^5.3.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^6.6.6",
    "sass": "^1.43.2",
    "sleep-promise": "^9.1.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^7.6.0",
    "@nestjs/schematics": "^7.3.0",
    "@nestjs/testing": "^7.6.15",
    "@types/express": "^4.17.11",
    "@types/jest": "^26.0.22",
    "@types/node": "^14.14.36",
    "@types/react": "^17.0.30",
    "@types/supertest": "^2.0.10",
    "@typescript-eslint/eslint-plugin": "^4.19.0",
    "@typescript-eslint/parser": "^4.19.0",
    "eslint": "^7.22.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-prettier": "^3.3.1",
    "jest": "^26.6.3",
    "prettier": "^2.2.1",
    "supertest": "^6.1.3",
    "ts-jest": "^26.5.4",
    "ts-loader": "^8.0.18",
    "ts-node": "^9.1.1",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^4.2.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "@app/shared/(.*)": "<rootDir>/libs/shared/src/$1",
      "@app/shared": "<rootDir>/libs/shared/src",
      "@app/stock/(.*)": "<rootDir>/libs/stock/src/$1",
      "@app/stock": "<rootDir>/libs/stock/src"
    }
  }
}
